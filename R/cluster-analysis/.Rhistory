list.files("networks/input_BIF")
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF/"
output_directory = "networks/output_NET/"
for(fileName in list.files()){
write.net(
fitted = read.bif(file = input_directory + fileName),
file = output_directory + tools::file_path_sans_ext(fileName) + ".net")
}
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF/"
output_directory = "networks/output_NET/"
for(fileName in list.files()){
write.net(
fitted = read.bif(file = paste(input_directory, fileName)),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
}
list.files()
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF/"
output_directory = "networks/output_NET/"
for(fileName in list.files()){
write.net(
fitted = read.bif(file = paste(input_directory, fileName)),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
}
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF"
output_directory = "networks/output_NET/"
for(fileName in list.files()){
write.net(
fitted = read.bif(file = paste(input_directory, fileName)),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
}
list.files("network")
list.files("networks")
list.files("networks/input_BIF")
write.net(
fitted = read.bif(file = paste(input_directory, fileName)),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF"
output_directory = "networks/output_NET/"
for(fileName in list.files(input_directory)){
write.net(
fitted = read.bif(file = paste(input_directory, fileName)),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
}
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF"
output_directory = "networks/output_NET/"
for(fileName in list.files(input_directory)){
write.net(
fitted = read.bif(file = paste(input_directory, fileName)),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
}
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF/"
output_directory = "networks/output_NET/"
for(fileName in list.files(input_directory)){
write.net(
fitted = read.bif(file = paste(input_directory, fileName)),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
}
filessss = list.files("networks/input_BIF/")
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF/"
output_directory = "networks/output_NET/"
for(fileName in list.files(input_directory)){
write.net(
fitted = read.bif(file = paste(input_directory, fileName, sep = "")),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net"))
}
warnings()
read.bif("networks/input_BIF/BI_d897_female_motor_nms55.bif")
warnings()
BI_d897_female_motor_nms55 = read.bif("networks/input_BIF/BI_d897_female_motor_nms55.bif")
# This script transforms all the BIF networks into NET equivalents for their posterior analysis
# using the Genie software.
#########################################################
### A) Installing and loading required packages
#########################################################
if (!require("bnlearn")) {
install.packages("bnlearn", dependencies = TRUE)
library(bnlearn)
}
if (!require("foreign")) {
install.packages("foreign", dependencies = TRUE)
library(foreign)
}
input_directory = "networks/input_BIF/"
output_directory = "networks/output_NET/"
for(fileName in list.files(input_directory)){
write.net(
fitted = read.bif(file = paste(input_directory, fileName, sep = "")),
file = paste(output_directory, tools::file_path_sans_ext(fileName), ".net",  sep = ""))
}
